{"version":3,"file":"breadcrumb.component.js","sourceRoot":"","sources":["../src/breadcrumb.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElE,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,WAAW,MAAM,qBAAqB,CAAC;AAC9C,OAAO,gBAAgB,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAG5D,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,IAAI;IAApC;;QAG+B,oBAAe,GAAG,KAAK,CAAC;QACxB,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QAChB,SAAI,GAAG,KAAK,CAAC;IAwB5C,CAAC;IArBW,MAAM;QACd,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAES,QAAQ;QAChB,OAAQ,IAAI,CAAC,IAAwB;aAClC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aAChC,MAAM,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,cAAc,CAAC,CAA4B,CAAC;IACnF,CAAC;IAES,gBAAgB;QACxB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBAC5B,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,IAAI,CAAC,SAAS;oBAAE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;gBACxC,IAAI,IAAI,CAAC,OAAO;oBAAE,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;gBACpC,IAAI,IAAI,CAAC,eAAe;oBAAE,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;YACtD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF,CAAA;AA7Be,0BAAe,GAAG,WAAW,CAAC;AAEf;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;mDAAyB;AACxB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;6CAAmB;AAClB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;2CAAiB;AAChB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;wCAAc;AAC3B;IAAd,KAAK,CAAC,MAAM,CAAC;8BAAgB,WAAW;wCAAC;AAP/B,UAAU;IADtB,aAAa,CAAC,eAAe,CAAC;GAClB,UAAU,CA8BtB;SA9BY,UAAU","sourcesContent":["import { customElement, property, css, query } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport labelStyles from './breadcrumb.styles';\r\nimport standardTemplate from './breadcrumb.template';\r\nimport { BreadcrumbItem } from './breadcrumbitem.component';\r\n\r\n@customElement('sp-breadcrumb')\r\nexport class Breadcrumb extends Base {\r\n  public static componentStyles = labelStyles;\r\n\r\n  @property({ type: Boolean }) breadcrumbtitle = false;\r\n  @property({ type: Boolean }) multiline = false;\r\n  @property({ type: Boolean }) compact = false;\r\n  @property({ type: Boolean }) last = false;\r\n  @query('slot') private slot!: HTMLElement;\r\n\r\n  protected render() {\r\n    return standardTemplate.call(this);\r\n  }\r\n\r\n  protected getSteps(): BreadcrumbItem[] {\r\n    return (this.slot as HTMLSlotElement)\r\n      .assignedNodes({ flatten: true })\r\n      .filter((e: Node) => (e instanceof BreadcrumbItem)) as any as BreadcrumbItem[];\r\n  }\r\n\r\n  protected handleSlotChange() {\r\n    if (this.slot) {\r\n      const steps = this.getSteps();\r\n      steps.forEach((step, index) => {\r\n        step.last = (index === (steps.length - 1));\r\n        if (this.multiline) step.multiline=true;\r\n        if (this.compact) step.compact=true;\r\n        if (this.breadcrumbtitle) step.breadcrumbtitle=true;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-breadcrumb': Breadcrumb;\r\n  }\r\n}\r\n"]}